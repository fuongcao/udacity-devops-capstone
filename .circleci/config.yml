version: 2.1
executors:
  nodejs-executor:
  # working directory: /home/circleci/project
    docker:
      - image: cimg/node:18.16.1

  awscli-executor:
  # working directory: root/project
    docker:
      - image: amazon/aws-cli:2.12.

orbs:
  slack: circleci/slack@4.4.2
  aws-cli: circleci/aws-cli@3.1.5
  docker: circleci/docker@2.2.0

commands:
  notify_slack_pass:
    steps:
      - slack/notify:
          event: pass
          template: basic_success_1

  notify_slack_fail:
    steps:
      - slack/notify:
          event: fail
          template: basic_fail_1

jobs:
  build-app:
    executor: nodejs-executor
    steps:
      - checkout
      - restore_cache:
          keys: [build-cache, dist-cache]
      - run:
          name: Build 
          command: |
            echo "node:$(node --version)" && echo "npm:$(npm --version)"
            npm install
            npm run build

      - save_cache:
          paths: [node_modules]
          key: build-cache
      - save_cache:
          paths: [dist]
          key: dist-cache

  lint-test-app:
    executor: nodejs-executor
    steps:
      - checkout
      - restore_cache:
          keys: [build-cache]
      - run:
          name: Run app audit
          command: |
            echo =========== Run audit ==================================
            npm audit --audit-level=critical
      - run:
          name: Run app lint check
          command: |   
            echo =========== Run Lint ==================================
            npm run lint
      - run:
          name: Run app Test
          command: |   
            echo =========== Run Test ==================================
            npm run test

  build-docker:
    executor: docker/docker
    environment:
      DOCKER_IMAGE: devops-capstone
      DOCKER_TAG: latest
    steps:
      - setup_remote_docker
      - checkout
      - restore_cache:
          keys: [dist-cache]
      - docker/check:
          docker-username: DOCKER_USER
          docker-password: DOCKER_PASSWORD

      - docker/build:
          image: $DOCKER_USER/$DOCKER_IMAGE
          tag: $DOCKER_TAG

      - docker/push:
          digest-path: /tmp/digest.txt
          image: $DOCKER_USER/$DOCKER_IMAGE
          tag: $DOCKER_TAG

      - run:
          command: |
            echo "Digest is: $(</tmp/digest.txt)"
          
          
workflows:
  default:
    jobs:
      - build-app:
          context: slack-secrets
      - lint-test-app:
          context: slack-secrets
          requires: [build-app]
      - build-docker:
          context: slack-secrets
          requires: [lint-test-app]

